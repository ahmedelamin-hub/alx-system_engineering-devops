#!/usr/bin/env bash

# Ensure Nginx is installed
if ! command -v nginx &> /dev/null; then
  echo "Nginx is not installed. Please install it first."
  exit 1
fi

# Create nginx user if it doesn't exist
if ! id -u nginx &>/dev/null; then
  useradd -r -d /var/www -s /sbin/nologin nginx
fi

# Update Nginx configuration to run as nginx user and listen on port 8080
NGINX_CONF="/etc/nginx/nginx.conf"
DEFAULT_SITE_CONF="/etc/nginx/sites-available/default"

if [ -f "$NGINX_CONF" ] && [ -f "$DEFAULT_SITE_CONF" ]; then
  # Backup the original configuration files
  cp "$NGINX_CONF" "${NGINX_CONF}.bak"
  cp "$DEFAULT_SITE_CONF" "${DEFAULT_SITE_CONF}.bak"

  # Modify the user and port settings
  sed -i 's/^user .*/user nginx;/' "$NGINX_CONF"
  sed -i 's/listen 80;/listen 8080;/' "$DEFAULT_SITE_CONF"

  echo "Updated Nginx configuration to run as nginx user and listen on port 8080."
else
  echo "Nginx configuration file(s) not found."
  exit 1
fi

# Ensure proper permissions for web root directory
chown -R nginx:nginx /var/www

# Restart Nginx service
if command -v systemctl &> /dev/null; then
  systemctl restart nginx
else
  nginx -s reload
fi

# Check if Nginx is running as the nginx user and listening on port 8080
if ps aux | grep '[n]ginx' | grep -q 'nginx: master process'; then
  echo "Nginx is running as the nginx user."
else
  echo "Failed to start Nginx as the nginx user."
  exit 1
fi

if nc -zv 127.0.0.1 8080 &> /dev/null; then
  echo "Nginx is listening on port 8080."
else
  echo "Nginx is not listening on port 8080."
  exit 1
fi

echo "Nginx configuration complete."

